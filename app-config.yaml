app:
  title: Valcann Backstage App
  baseUrl: https://backstage.pauloponciano.digital

organization:
  name: Valcann

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: https://backstage.pauloponciano.digital
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: https://backstage.pauloponciano.digital
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    #client: better-sqlite3
    #connection: ':memory:'
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      #token: ${GITHUB_TOKEN}
      token: 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
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}
  aws:
    mainAccount:
    accounts:
      - accountId: '310240692520'
        accessKeyId: AKIAUQO6JJEUOF3MWK5R
        secretAccessKey: soqCKOi1Eklx3zfw8Pv6Oo4TmBrpCw6N+kMi28Ur
        region: us-east-2

proxy:
  '/test':
    target: 'https://example.com'
    changeOrigin: true
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: production
  providers:
    github:
      production:
        #clientId: ${AUTH_GITHUB_CLIENT_ID}
        #clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
        clientId: d66e84e646bae22e9eea
        clientSecret: 9c5b28c0240083bb5a9e20c74bb2fcb308be5959

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, Group, Resource, Location, Template, API]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: url
      target: https://github.com/paulofponciano/backstage-app/blob/main/catalog-entities/locations.yaml

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://418096DD544DB54956DF69C37CF72EA4.gr7.us-east-2.eks.amazonaws.com
          name: pegasus
          #authProvider: 'aws'
          authProvider: 'serviceAccount'
          skipTLSVerify: false
          skipMetricsLookup: true
          serviceAccountToken: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqSlRPVGRmYlhCd1lsRTJVSFpaYzBwdll6Z3lXalZRTFdGemJqRnZSVk0yYVhGVmFISndNMGhuWnpnaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyZFdKbExYTjVjM1JsYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZqY21WMExtNWhiV1VpT2lKaVlXTnJjM1JoWjJVdGFXNW5aWE4wYVc5dUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVibUZ0WlNJNkltSmhZMnR6ZEdGblpTMXBibWRsYzNScGIyNGlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSTVOV0kwT1RWbE5pMHhNRGcxTFRSa1lUZ3RZV1E0TnkxbU16UTJOakZsWm1ZM1pUQWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2YTNWaVpTMXplWE4wWlcwNlltRmphM04wWVdkbExXbHVaMlZ6ZEdsdmJpSjkuV3dXdEtCYUZ3emFIRnlETWViOS1DWS0zeDU3Z1EtWENqZU9jQ25BX1ZSN29KZkxqaHM5YXU5VUVKSHBDTEhaVUNLeV9VSzFDQk5ZX0hwcFRyY0N6MFBBOGFDSU5YdDBUeU1PZG4xQ0ZNMjdVeEJyZkEyZGZMbGs0LWI0bGhVN1ZOQ3JGaU9xd3FVUURFZUMxQmxNTE5FaDYzM3VPTTVmaThEdmV6SUFlTy1vZmRSLWtFQThEYkt0X0pvVnpNSnFIb1FhVzFucDlIMk84anR0eTNHTWNDUEY1dzVBNHduMDVsMGhzWWcxWktFT0c3a0RRY05VbmxFTVk0UXFFeDMyRFplS00wYUhDUTFINVJkMHViSkt0QXJNNlFTZlpRa0JISklvNnVMd1pZT1pYZThFa3p5Njh1TFNoc3J5NnhDYjJJLTUxSDJZaEpvZno0QzRpbk5HUkZ3
          caData: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQmM5MFQ5dXpMT3d3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1EUXhNakU1TkRkYUZ3MHpNekV4TURFeE1qSTBORGRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNldzdzUklLZTMxYU5IY09Xc2FpQStyUEIyWmxWc3Y2eDNxaDVYTjZXcUxISWltZHIzdk9wMEJLTDgKK3owRFdhT1B4ZGYwS29nSEhEVHJMTHRKcE5jVnhweWJERGhVVTM0QTFuTDFhY3FIRytxVkZhSUNTdXdrRmxPLwp0WE9JaXk3SHBESDdlT1R3YmlzTGR6Y0kzYjJxYWVaMlRBSkc1dEZ2b3NRMzNSb3FnU2Uwd08zaU1HZ0tiMW9GClo4MGVwcEhBWUZENGpTOWZSMDlHUXZwa0QzMlNsbExSTmQyMHREdDNwN2dlbnFuODV4Z1JVSmN6eEhGYVFOUUsKUEpoUjI4L0dmZHJRSUZsRVoxS2JzTEVxQ083RTdyTVg4WWMzSURuVGp0Y0tkcHNXcDI2T0c4V2dqVy9PZHdibgpjbU9FTTRjS2lsODFuSTAzSm40V3BoVURiLzNaQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdlp4R3RpYzdjcFdUQW1jMk1MbDZXNUdqZU5EQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1hOOVJyNE9kZApsdlpyZU5UNy9kdGhzb2RveWFKc3kyOUZrQjVOeEhpTDdRY1ltSUR2SkZNNk9SYUxiTlNsTUx4cHhuVTBZU0JlCklURmlhZ0xlVGczQkdoUy90SVVXaTExUGJiM0J3eHpSMXcxVHpZVjBVVHpjYkZuUGEwYlVOVVAyaFJsTzI5MlMKVy9TQzI5L2dSVFBwZ3Bua2hvcGVsV1ptMjdrVzRkRWcxUjEydFN5T2QwRVZPR0hDaHJLTnJiVVE0NFh2OTRWTgp0TStoaVhCN0RlczJEOE56UzlpaDNnaUQwZkVkRzRxTWVRbkRnMXE2QnpjcytlczR5WUlISnF1bDJON1AyY2x6CmJybjFFSUYyTnJnOGpJV2xHb04ySkpjK0JPYTEweWhOZ3EwVTNHZlRNMWdxdGNFcUpqL3lTeTZNVDk4aW52TzQKZlFwMzIySGJrU1R5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K'
